<?xml version="1.0" encoding="UTF-8"?>
<Worksheet>
<Version major="2018" minor="2"/>
<Label-Scheme value="2" prefix=""/>
<View-Properties presentation="true" autoexpanding_sections="true" UserProfileName="Maple Default Profile" NumericFormat-ApplyInteger="true" NumericFormat-ApplyRational="true" NumericFormat-ApplyExponent="false" editable="true">
</View-Properties>
<MapleNet-Properties prettyprint="3" warnlevel="3" preplot="" helpbrowser="standard" displayprecision="-1" echo="1" unitattributes="&quot;fontweight&quot; = &quot;bold&quot;" imaginaryunit="I" longdelim="true" elisiontermsthreshold="10000" elisiondigitsafter="100" elisiondigitsbefore="100" plotdevice="inline" errorbreak="1" plotoptions="" plotdriver="opengl" quiet="false" elisiontermsbefore="100" elisiontermsafter="100" screenwidth="79" indentamount="4" plotoutput="terminal" screenpixelheight="1200" rtablesize="20" useclientjvm="true" labelwidth="20" postplot="" typesetting="extended" ansi="false" ansicolor="[]" elisiondigitsthreshold="10000" showassumed="1" ansilprint="false" errorcursor="false" labelling="true" screenheight="25" prompt="&gt; " verboseproc="1" latexwidth="8.0" ShowLabels="true"/>
<Styles>
<Font name="Heading 1" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Warning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Line Printed Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 2" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="16" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Inert Output" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[144,144,144]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 3" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="14" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Diagnostic" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[40,120,40]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 1" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[120,0,14]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 2" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 3" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 5" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Header and Footer" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="10" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkError" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Atomic Variable" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[175,0,175]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkWarning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Dictionary Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[147,0,15]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="2D Math" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Bullet Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Plot" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="List Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Dash Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Input" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Error" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Normal" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Caption Reference" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Code" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input Placeholder" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[200,0,200]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="true"/>
<Font name="Equation Label" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Author" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,128,128]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Caption Text" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Layout name="Heading 1" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="4" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Warning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 4" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Line Printed Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 2" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="2" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Output" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.3" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 3" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Diagnostic" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 1" alignment="left" bullet="numeric" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Text Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="newline" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Ordered List 2" alignment="left" bullet="alphabetic" firstindent="0" leftmargin="36" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 3" alignment="left" bullet="roman" firstindent="0" leftmargin="72" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 4" alignment="left" bullet="ALPHABETIC" firstindent="0" leftmargin="108" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Ordered List 5" alignment="left" bullet="ROMAN" firstindent="0" leftmargin="144" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix="."/>
<Layout name="Annotation Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkError" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkWarning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Bullet Item" alignment="left" bullet="dot" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Plot" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="List Item" alignment="left" bullet="indent" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Dash Item" alignment="left" bullet="dash" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Error" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Normal" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Author" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="8" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Pencil-style name="Pencil 1" pen-color="[0,0,0]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 2" pen-color="[0,0,255]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 3" pen-color="[0,0,0]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 4" pen-color="[0,0,255]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 5" pen-color="[255,0,0]" pen-height="5.0" pen-width="5.0" pen-opacity="1.0"/>
<Highlighter-style name="Highlighter 5" pen-color="[255,255,0]" pen-height="48.0" pen-width="48.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 3" pen-color="[51,255,0]" pen-height="24.0" pen-width="24.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 4" pen-color="[0,255,255]" pen-height="32.0" pen-width="32.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 1" pen-color="[255,153,255]" pen-height="12.0" pen-width="8.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 2" pen-color="[255,204,0]" pen-height="14.0" pen-width="14.0" pen-opacity="0.8"/>
</Styles>
<Startup-Code startupcode=""/>
<Task-table>
    <Task-category name="&lt;default&gt;"/>
</Task-table>
<Task/><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1712" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Title" layout="Title">Berechnungen zu Euler-Winkeln</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1714" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Normal" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1718" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 1" layout="Heading 1">Inhalt</Text-field>
</Input>
</Group>
<Group view="presentation" inline-output="false" labelreference="L1716" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Folgende Aspekte werden behandelt:</Text-field><Text-field style="Text" layout="Normal">Euler-Winkel -&gt; Rotationsmatrix (eul2r)</Text-field><Text-field style="Text" layout="Normal">Rotationsmatrix -&gt; Euler-Winkel (r2eul)
Transformationsmatrix: Winkelgeschwindigkeit -&gt; Euler-Winkel-Geschwindigkeit (euljac)
Transformationsmatrix:  Winkelbeschleunigung -&gt; Euler-Winkel-Beschleunigung (euljacD)
</Text-field><Text-field style="Heading 1" layout="Heading 1">Vorgehensweise</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1735" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Heading 1" bullet="dot"><Font style="Normal">Datei `</Font>matlab_tools_path` im Hauptordner des Repo erstellen mit Inhalt `matlab_tools_path:=/pfad/zum/matlab-tools-repo`. Der Pfad zeigt zum entsprechenden imes-Repo</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1736" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Heading 1" bullet="dot"><Font encoding="UTF-8">Dieses Maple-Arbeitsblatt ausf\303\274hren</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1737" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Heading 1" bullet="dot">Die Matlab-Funktionen mit gen_proc.sh generieren lassen</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1738" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Heading 1" bullet="dot">Matlab-Funktionen mit `euler_test.m` testen</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1728" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 1" layout="Heading 1">Quellen</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1729" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Normal" layout="Normal">Skript Robotik I<Font style="Text">
</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1720" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Heading 1" layout="Heading 1">Autor</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1627" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Normal" layout="Normal">Moritz Schappler, moritz.schappler@imes.uni-hannover.de, 2018-10</Text-field><Text-field style="Normal" layout="Normal">Institut fuer Mechatronische Systeme, Leibniz Universitaet Hannover</Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Initialisierung</Text-field></Title><Presentation-Block>
<Group labelreference="L1626" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">restart:</Text-field>
</Input>
</Group>
<Group labelreference="L1628" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">with(LinearAlgebra):
with(ArrayTools):
with(codegen):
with(CodeGeneration):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L1641" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">interface(rtablesize=20):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group labelreference="L1632" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Hilfsfunktionen f\303\274r Rotationsmatrizen laden (aus dieser Robotik-Toolbox)</Font></Text-field>
</Input>
</Group>
<Group labelreference="L1633" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read(&quot;proc_rotx&quot;):
read(&quot;proc_roty&quot;):
read(&quot;proc_rotz&quot;):</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L1650" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Hilfsfunktionen laden (aus Matlab-Repo) (die Datei <Font encoding="UTF-8">matlab_tools_path muss daf\303\274r existieren)</Font></Text-field>
</Input>
</Group>
<Group view="code" labelreference="L1648" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read(&quot;../../matlab_tools_path&quot;);
read(sprintf(&quot;%s/maple/proc_MatlabExport&quot;, matlab_tools_path)):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L1631" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">Kombinationen aller Achsen</Text-field></Title><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1630" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Erstelle alle m\303\266glichen Euler-Winkel-Kombinationen (1=X, 2=Y, 3=Z).</Font>
Betrachte nur intrinsische (mitgedrehte) Winkel</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L1684" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">axes_comb := Matrix(12,3): # Kombinationen f\303\274r Euler-Winkel</Font></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L1687" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">eulstrings := convert(Matrix(1,12), list): # Strings f\303\274r die Euler-Winkel</Font></Text-field>
</Input>
</Group>
<Group view="code" labelreference="L1689" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">xyzstrings := [&quot;x&quot;, &quot;y&quot;, &quot;z&quot;]:</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" inline-output="false" labelreference="L1683" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion0" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">zlr := 0:
for a1 from 1 to 3 do
  for a2 from 1 to 3 do
    for a3 from 1 to 3 do
    	 if a1 = a2 or a2 = a3 then
    	   next:
    	 end if:
    	 zlr := zlr + 1:
    	 axes_comb(zlr,..) := &lt;a1, a2, a3&gt;:
    	 eulstrings[zlr] := sprintf(&quot;%s%s%s&quot;, xyzstrings[a1], xyzstrings[a2], xyzstrings[a3]):
    end do:
  end do:
end do:</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font encoding="UTF-8">eul2r f\303\274r die Kombinationen aller Achsen generieren</Font></Text-field></Title><Presentation-Block>
<Group view="code" labelreference="L1678" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">eul2r berechnet die Rotationsmatrix aus gegebenen Euler-Winkeln</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L1674" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Generiere Maple-Prozeduren f\303\274r die Euler-Winkel</Font></Text-field>
</Input>
</Group>
<Group view="code" labelreference="L1676" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8">phi := &lt;phi1; phi2; phi3&gt;: # Beispiel-Winkel f\303\274r Eingabe</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" inline-output="false" labelreference="L1673" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion1" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">for i from 1 to 12 do
  eulstr := eulstrings[i]:
  # Rotationsmatrix (RM) aufbauen
  RM := IdentityMatrix(3):
  for j from 1 to 3 do
    ax := axes_comb(i,j):
    if ax = 1 then
      RM := RM . rotx(phi(j)):
    elif ax = 2 then
      RM := RM . roty(phi(j)):
    else
      RM := RM . rotz(phi(j)):
    end if:
  end do:
  # printf(&quot;%s\134n&quot;, eulstr):
  save RM, sprintf(&quot;codeexport/eul%s2r&quot;, eulstr):
  MatlabExport(RM, sprintf(&quot;codeexport/eul%s2r_matlab.m&quot;, eulstr), 2):
end do:</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1"><Font encoding="UTF-8">r2eul f\303\274r die Kombinationen aller Achsen generieren (als Matlab-Funktion)</Font></Text-field></Title><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1656" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Die Berechnung r2eul wird h\303\244ndisch erstellt (&quot;mit Hingucken&quot;) und abgespeichert. Diese Prozeduren werden dann hier geladen und nach Matlab-Code konvertiert</Font></Text-field>
</Input>
</Group>
<Group view="code" labelreference="L1696" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"><Font encoding="UTF-8"># Code f\303\274r Herleitung der Prozeduren r2eul
</Font>#rotx(phi1) . roty(phi2) . rotz(phi3)</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L1733" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Allgemeine Rotationsmatrix mit Platzhaltern f\303\274r Matrixeintr\303\244ge</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" inline-output="false" labelreference="L2076" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion11" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">RR := Matrix(3,3):
for i from 1 to 3 do:
  for j from 1 to 3 do:
    RR(i,j) := parse(sprintf(&quot;r%d%d&quot;, i, j)):
  end do:
end do:</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L1710" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Matlab-Code generieren</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" inline-output="false" labelreference="L1700" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion2" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">for i from 1 to 12 do
  eulstr := eulstrings[i]:
  read(sprintf(&quot;proc_r2eul%s&quot;, eulstr)): # Prozedur aus Datei einlesen
  r2eul := parse(sprintf(&quot;r2eul%s&quot;, eulstr)): # Prozedur lokal definieren f\303\274r Konvention Nummer `i`
  phi_i := r2eul(RR):
  MatlabExport(phi_i, sprintf(&quot;codeexport/r2eul%s_matlab.m&quot;, eulstr), 2):
end do:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group view="code" labelreference="L2055" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Teste Hin- und R\303\274cktransformation.
</Font>--&gt;Muss hier nicht getestet werden: Exportierter Code wurde numerisch in Matlab getestet.</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L2054" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"></Text-field>
</Input>
</Group>
<Group view="code" labelreference="L2049" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Normale und Inert-Funktion testen. Die Inert-Form ist geeignet, wenn der Term nur in arctan eingesetzt werden soll, dieser aber nicht ausgewertet werden soll.
Das ist sinnvoll, wenn der Code exportiert wird und die Auswertung keinen Mehrwert bringt, oder wenn die Auswertung zu lange dauert.</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" hide-input="false" inline-output="false" labelreference="L2052" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion9" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">printf(&quot;Fehler bei Inert-Funktion r2eul:&quot;):
for i from 1 to 12 do
  eulstr := eulstrings[i]:
  read(sprintf(&quot;proc_r2eul%s&quot;, eulstr)): # Prozedur aus Datei einlesen
  r2eul := parse(sprintf(&quot;r2eul%s&quot;, eulstr)): # Prozedur lokal definieren f\303\274r Konvention Nummer `i`
  read(sprintf(&quot;proc_r2eul%s_inert&quot;, eulstr)): # Prozedur aus Datei einlesen
  r2eul_inert := parse(sprintf(&quot;r2eul%s_inert&quot;, eulstr)): # Prozedur lokal definieren f\303\274r Konvention Nummer `i`
  phi_1 := r2eul(RR):
  phi_2 := r2eul_inert(RR):
  phi_diff := phi_1-value(phi_2):
  print(Transpose(phi_diff)):
end do:</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">eul_diff_rotmat: Ableitung der Euler-Winkel nach der Rotationsmatrix</Text-field></Title><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L5" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Diese Ableitung kann in der gradientenbasierten inversen Kinematik benutzt werden.</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L2008" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Prozedur zum Umwandeln einer Rotationsmatrix in einen gestapelten Vektor</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L2001" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">rmat2vec := proc(R)
  local Rb:
  Rb := Reshape(R, 9,1):
  return Rb:
end proc:</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L1741" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">r_vec := rmat2vec(RR):</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L2009" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Bildung der Ableitung f\303\274r alle Winkelkonventionen</Font></Text-field>
</Input>
</Group><CodeEditor-ExecGroup view="presentation" hide-input="false" inline-output="false" labelreference="L2000" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion3" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">for iconv from 1 to 12 do
  eulstr := eulstrings[iconv]:
  read(sprintf(&quot;proc_r2eul%s&quot;, eulstr)): # Prozedur aus Datei einlesen
  r2eul := parse(sprintf(&quot;r2eul%s&quot;, eulstr)): # Prozedur lokal definieren f\303\274r Konvention Nummer `i`
  phiR := r2eul(RR):
  GradMat2 := Matrix(3,9):
  for i from 1 to 3 do;
    for j from 1 to 9 do;
      GradMat2(i,j) := diff(phiR(i), r_vec(j)):
    end do:
  end do:
  # Ausdruck vereinfachen. Dadurch entsteht Summe der Quadrate der einzelnen Einheitsvektoren
  GradMat2 := simplify(GradMat2):
  # Vereinfachungen: Rotationsmatrix besteht aus Einheitsvektoren (ist orthonormal)
  for i from 1 to 3 do;
    GradMat2 := subs(RR(i,1)^2+RR(i,2)^2+RR(i,3)^2=1, GradMat2): # Zeile ist Einheitsvektor
    GradMat2 := subs(RR(1,i)^2+RR(2,i)^2+RR(3,i)^2=1, GradMat2): # Spalte ist Einheitsvektor
  end do:
  # Weitere Vereinfachungen: Summe zweier Quadrate ist Eins minus das andere Quadrat der Komponenten eines Einheitsvektors
  # Das ist mathematisch richtig, f\303\274hrt aber zu Code, der numerisch teilweise Probleme bereitet, da eher durch Null geteilt wird
  # Die Reduktion der Rechenoperationen rechtfertigt hier keinen weiteren Aufwand.
  for i from 1 to 3 do;
    for j from 1 to 3 do;
      if j = 1 then
        lhs_j := [2, 3]:
      elif j = 2 then
        lhs_j := [1, 3]:
      else
        lhs_j := [1, 2]:
      end if:
      rhs_j := j:
      #Funktioniert, aber nicht machen, da Implementierung dann numerisch weniger stabil bei Singularit\303\244ten
      #GradMat2 := subs(RR(i,lhs_j[1])^2+RR(i,lhs_j[2])^2=1-RR(i,rhs_j)^2, GradMat2): # Enth\303\244lt Summe zweier Komponentenquadrate eines Zeilenvektors
      #GradMat2 := subs(RR(lhs_j[1],i)^2+RR(lhs_j[2],i)^2=1-RR(rhs_j,i)^2, GradMat2): # Enth\303\244lt Summe zweier Komponentenquadrate eines Spaltenvektors
    end do:
  end do:
  # Exportieren
  save GradMat2, sprintf(&quot;codeexport/eul%s_diff_rotmat_maple&quot;, eulstr):
  MatlabExport(GradMat2, sprintf(&quot;codeexport/eul%s_diff_rotmat_matlab.m&quot;, eulstr), 2):
end do:</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L2064" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Test der generierten Maple-Prozedur (f\303\274r letzte Euler-Konvention aus der Schleife</Font></Text-field>
</Input>
</Group>
<Group view="code" labelreference="L2063" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read(sprintf(&quot;proc_eul%s_diff_rotmat&quot;, eulstr)): # Prozedur aus Datei einlesen
edr := parse(sprintf(&quot;eul%s_diff_rotmat<Font encoding="UTF-8">&quot;, eulstr)): # Prozedur lokal definieren f\303\274r Konvention Nummer `i`</Font></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L2078" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">edr(RR);</Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L2065" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">edr(RR) - GradMat2;</Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">rotmat_diff_eul: Ableitung der Rotationsmatrix nach den Euler-Winkeln</Text-field></Title><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L1739" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Diese Ableitung kann in der gradientenbasierten inversen Kinematik benutzt werden.</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L1742" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Bildung der Ableitung f\303\274r alle Winkelkonventionen</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" inline-output="false" labelreference="L2005" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion4" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">for iconv from 1 to 12 do
  eulstr := eulstrings[iconv]:
  read(sprintf(&quot;proc_eul%s2r&quot;, eulstr)): # Prozedur aus Datei einlesen
  eul2r := parse(sprintf(&quot;eul%s2r&quot;, eulstr)): # Prozedur lokal definieren f\303\274r Konvention Nummer `i`
  r_phi := eul2r(phi):
  r_dphi := Matrix(9,3):
  for i from 1 to 9 do:
    for j from 1 to 3 do:
      r_dphi(i,j) := diff(r_phi(i), phi(j)):
    end do:
  end do:
  save r_dphi, sprintf(&quot;codeexport/rotmat_diff_eul%s_maple&quot;, eulstr):
  MatlabExport(r_dphi, sprintf(&quot;codeexport/rotmat_diff_eul%s_matlab.m&quot;, eulstr), 2):
end do:</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L2061" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Test der generierten Maple-Prozedur</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L2060" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read(sprintf(&quot;proc_rotmat_diff_eul%s&quot;, eulstr)): # Prozedur aus Datei einlesen
<Font encoding="UTF-8">rde := parse(sprintf(&quot;rotmat_diff_eul%s&quot;, eulstr)): # Prozedur lokal definieren f\303\274r Konvention Nummer `i`</Font></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L2059" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">rde(phi_s) - r_dphi;</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L2058" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
</Section>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">euljac: Transformation zwischen Winkelgeschwindigkeiten und Zeitableitung der Euler-Winkel</Text-field></Title><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L7" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Diese Jacobi-Matrix stellt den linearen Zusammenhang w=J phiD dar.</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L2018" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Definitionen</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" inline-output="false" labelreference="L2026" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion6" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">phi_t:=Matrix(3,1,&lt;phi1(t),phi2(t),phi3(t)&gt;):
phiD_t:=diff~(phi_t,t):
phi_s:=Matrix(3,1,&lt;phi1_s,phi2_s,phi3_s&gt;):
phiD_s:=Matrix(3,1,&lt;phi1D_s,phi2D_s,phi3D_s&gt;):
</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L2015" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Berechnung f\303\274r alle Euler-Winkel-Konventionen</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" inline-output="false" labelreference="L2017" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion5" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">for iconv from 1 to 12 do
  eulstr := eulstrings[iconv]:
  read(sprintf(&quot;proc_eul%s2r&quot;, eulstr)): # Prozedur aus Datei einlesen
  eul2r := parse(sprintf(&quot;eul%s2r&quot;, eulstr)): # Prozedur lokal definieren f\303\274r Konvention Nummer `i`
  # Rotationsmatrix nach Euler-Konvention
  R_t:=eul2r(phi_t):
  # Winkelgeschwindigkeit aus der Zeitableitung der Rotationsmatrix
  omegatilde_t:=diff~(R_t,t).Transpose(R_t):
  omega_t := Matrix(3,1,&lt;omegatilde_t(3,2), omegatilde_t(1,3), omegatilde_t(2,1)&gt;):

  #Ausdr\303\274cke substituieren (f\303\274r Matlab-Export ohne Zeitabh\303\244ngigkeit)
  R_s := R_t:
  omega_s := omega_t:
  omegatilde_s:=omegatilde_t:
  for i from 1 to 3 do
    omega_s:= subs({phiD_t[i,1] = phiD_s[i,1]},omega_s):
    omegatilde_s:= subs({phiD_t[i,1] = phiD_s[i,1]},omegatilde_s):
    R_s:= subs({phi_t[i,1] = phi_s[i,1]},R_s):
    omega_s:= subs({phi_t[i,1] = phi_s[i,1]},omega_s):
    omegatilde_s:= subs({phi_t[i,1] = phi_s[i,1]},omegatilde_s):
  end do:

  #Euler-Jacobi durch Ableitung bestimmen, da der lineare Zusammenhang
  #zwischen Winkelgeschwindigkeit und Euler-Winkel-Zeitableitung bekannt ist.
  J := Matrix(3,3):
  for i from 1 to 3 do:
    for j from 1 to 3 do:
      J(i,j) := simplify(diff(omega_s(i,1), phiD_s(j,1))):
    end do:
  end do:
  save J, sprintf(&quot;codeexport/eul%sjac_maple&quot;, eulstr):
  MatlabExport(J, sprintf(&quot;codeexport/eul%sjac_matlab.m&quot;, eulstr), 2):
end do:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group view="code" labelreference="L2031" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Test der generierten Maple-Prozedur</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L2032" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read(sprintf(&quot;proc_eul%sjac&quot;, eulstr)): # Prozedur aus Datei einlesen
<Font encoding="UTF-8">euljac := parse(sprintf(&quot;eul%sjac&quot;, eulstr)): # Prozedur lokal definieren f\303\274r Konvention Nummer `i`</Font></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L2033" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">euljac(phi_s) - J;</Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="code" labelreference="L2030" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
<Section collapsed="false" isCollapsible="true" drawButton="true" MultipleChoiceAnswerIndex="-1" MultipleChoiceRandomizeChoices="false" TrueFalseAnswerIndex="-1" EssayAnswerRows="5" EssayAnswerColumns="60"><Title><Text-field style="Heading 1" layout="Heading 1">euljacD: Transformation zwischen Winkelbeschleunigung und zweiter Zeitableitung der Euler-Winkel</Text-field></Title><Presentation-Block>
<Group view="presentation" inline-output="false" labelreference="L2040" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Diese Jacobi-Matrix stellt den linearen Zusammenhang wD=J phiDD + JD phiD dar.</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L2037" drawlabel="true">
<Input><Text-field style="Text" layout="Normal">Definitionen</Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" inline-output="false" labelreference="L2038" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion7" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">phi_t:=Matrix(3,1,&lt;phi1(t),phi2(t),phi3(t)&gt;):
phiD_t:=diff~(phi_t,t):
phiDD_t:=diff~(phiD_t,t):
phi_s:=Matrix(3,1,&lt;phi1_s,phi2_s,phi3_s&gt;):
phiD_s:=Matrix(3,1,&lt;phi1D_s,phi2D_s,phi3D_s&gt;):
phiDD_s:=Matrix(3,1,&lt;phi1DD_s,phi2DD_s,phi3DD_s&gt;):</EC-CodeEditor></CodeEditor-ExecGroup></Presentation-Block><Presentation-Block>
<Group view="code" labelreference="L2039" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Berechnung f\303\274r alle Euler-Winkel-Konventionen</Font></Text-field>
</Input>
</Group></Presentation-Block><Presentation-Block><CodeEditor-ExecGroup view="presentation" inline-output="false" labelreference="L2036" drawlabel="true" applyint="true" applyrational="true" display="code"><EC-CodeEditor id="CodeEditRegion8" expanded="true" visible="true" pixel-width="500" pixel-height="200" code-language="text/maple" autofit="true" wrapping="true" show-border="true" code-line-numbers="true">for iconv from 1 to 12 do
  eulstr := eulstrings[iconv]:
  # gespeicherte Transformationsmatrix von vorher laden
  read sprintf(&quot;codeexport/eul%sjac_maple&quot;, eulstr):

  # Substitution von zeitabh\303\244ngigen Variablen
  J_t := J:
  for i from 1 to 3 do
    J_t:= subs({phiD_s[i,1] = phiD_t[i,1]},J_t):
    J_t:= subs({phi_s[i,1] = phi_t[i,1]},J_t):
  end do:
  # Zeitableitung
  JD_t := diff~(J_t, t):

  # R\303\274cksubstitution f\303\274r Code-Export
  JD := JD_t:
  for i from 1 to 3 do
    JD:= subs({phiD_t[i,1] = phiD_s[i,1]},JD):
    JD:= subs({phi_t[i,1]  = phi_s[i,1]}, JD):
  end do:

  save JD, sprintf(&quot;codeexport/eul%sjacD_maple&quot;, eulstr):
  MatlabExport(JD, sprintf(&quot;codeexport/eul%sjacD_matlab.m&quot;, eulstr), 2):
end do:</EC-CodeEditor></CodeEditor-ExecGroup>
<Group view="code" labelreference="L2042" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field style="Text" layout="Normal">Test der generierten Maple-Prozedur</Text-field>
</Input>
</Group>
<Group view="code" labelreference="L2043" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">read(sprintf(&quot;proc_eul%sjacD&quot;, eulstr)): # Prozedur aus Datei einlesen
<Font encoding="UTF-8">euljacD := parse(sprintf(&quot;eul%sjacD&quot;, eulstr)): # Prozedur lokal definieren f\303\274r Konvention Nummer `i`</Font></Text-field>
</Input>
</Group>
<Group view="code" hide-input="false" labelreference="L2041" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal">euljacD(phi_s, phiD_s) - JD;</Text-field>
</Input>
</Group></Presentation-Block>
</Section><Presentation-Block>
<Group view="code" labelreference="L2057" drawlabel="true" applyint="true" applyrational="true" applyexponent="false">
<Input><Text-field prompt="&gt; " style="Maple Input" layout="Normal"></Text-field>
</Input>
</Group></Presentation-Block>
</Worksheet>